name: Main workflow
on: [push]
jobs:
  build:
    name: Install, Test, Release, Deploy, Smoke Test
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '16.16.0'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Test
        run: yarn test

      # Staging
      - name: Deploy Staging
        id: atomic_deployment
        if: github.ref == 'refs/heads/develop'
        run: |
          yarn tf-next
          yarn tf-next:deploy --endpoint $TF_NEXT_API_ENDPOINT
#          echo "::set-output name=url::$(yarn tf-next:deploy --endpoint $TF_NEXT_API_ENDPOINT | grep 'Available at:' | sed 's/^.*: //')"
        env:
          TF_NEXT_API_ENDPOINT: ${{ secrets.TF_NEXT_API_ENDPOINT }}

      # Production
      - name: Deploy Prod
        if: github.ref == 'refs/heads/develop'
        run: |
          yarn tf-next
          yarn tf-next:link $DOMAIN ${{echo "$(yarn tf-next:deploy --endpoint $TF_NEXT_API_ENDPOINT | grep 'Available at:' | sed 's/^.*: //')"}} --force

        env:
          DOMAIN: ${{ secrets.DOMAIN }}